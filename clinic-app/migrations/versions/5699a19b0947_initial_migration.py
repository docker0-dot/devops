"""Initial migration

Revision ID: 5699a19b0947
Revises: 
Create Date: 2025-06-08 17:35:20.085950

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5699a19b0947'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False,
               existing_server_default=sa.text("'Запланированно'::character varying"))
        batch_op.drop_constraint(batch_op.f('appointments_doctor_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('appointments_patient_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'doctors', ['doctor_id'], ['doctor_id'])
        batch_op.create_foreign_key(None, 'patients', ['patient_id'], ['patient_id'])

    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('age', sa.Integer(), nullable=True))
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('patientappointments', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False,
               existing_server_default=sa.text("'Забронированно'::character varying"))
        batch_op.drop_constraint(batch_op.f('patientappointments_appointment_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('patientappointments_patient_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('patientappointments_doctor_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'patients', ['patient_id'], ['patient_id'])
        batch_op.create_foreign_key(None, 'doctors', ['doctor_id'], ['doctor_id'])
        batch_op.create_foreign_key(None, 'appointments', ['appointment_id'], ['appointment_id'])

    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('date_of_birth',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('registration', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('registration_patient_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'patients', ['patient_id'], ['patient_id'])

    with op.batch_alter_table('test', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('registration', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('registration_patient_id_fkey'), 'patients', ['patient_id'], ['patient_id'], ondelete='CASCADE')

    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.alter_column('address',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.alter_column('date_of_birth',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('patientappointments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('patientappointments_doctor_id_fkey'), 'doctors', ['doctor_id'], ['doctor_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('patientappointments_patient_id_fkey'), 'patients', ['patient_id'], ['patient_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('patientappointments_appointment_id_fkey'), 'appointments', ['appointment_id'], ['appointment_id'], ondelete='CASCADE')
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'Забронированно'::character varying"))

    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('age')

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('appointments_patient_id_fkey'), 'patients', ['patient_id'], ['patient_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('appointments_doctor_id_fkey'), 'doctors', ['doctor_id'], ['doctor_id'], ondelete='CASCADE')
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'Запланированно'::character varying"))

    # ### end Alembic commands ###
